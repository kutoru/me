import{d as C,b as p,e as x,c as i,a as s,t as d,u,F as g,r as f,o as l,_ as T}from"./index-20125e4b.js";const j={title:"My personal projects",desc:"This is something like a report about some of my personal projects. The projects are listed in chronological order, from oldest to newest. For each project there is GitHub page, a little description, key goals that I had, what were some difficulties that I had to overcome, and things that I eventually learned from the project.",section_names:["About:","Goals:","Difficulties faced:","Conclusion:"],projects:[{title:'<a href="https://github.com/kutoru/sudoku-gui">Sudoku GUI</a>',start_date:"2023.04.08",end_date:"2023.04.24",sections:['This project was a Sudoku game with minimal GUI written with <a href="https://learn.microsoft.com/en-us/dotnet/desktop/winforms/overview">Windows Forms</a>. It allowed players to create accounts, log in to the accounts, create, complete and delete levels of different sizes and difficulties.',"I wanted to focus on: how to create GUI apps, how to interact with databases with C++, how to manage user credentials.","The biggest issue was the encryption library, I had a hard time searching for and importing it. I also had a hard time managing my code. Because of my lack of experience with frameworks, I could not figure out what would be the best way to separate my code and how I should do it.","In the end I learned everything I originally wanted, plus I learned how code separation and overall code management can be benefitial and convenient."]},{title:'<a href="https://github.com/kutoru/par">Par</a>',start_date:"2023.05.10",end_date:"2023.05.17",sections:["An image inspecting app, that would get images from a certain website's API.","I mainly wanted to get some experience with Rust and try other ways to make GUI apps. I also barely used GitHub before this project, so another goal was to get familiar with the platform and its version control.","The biggest difficulty was the lack of complete libraries (or crates, how they call them) in Rust. Coming from Python, I got used to the fact that there is a module for almost everything. But with Rust I had to use a GUI library that got deprecated, and I could not find a good API wrapper for the website that I was getting the images from. And obviously another difficulty was just generally figuring out borrow checker and the lifetime stuff.","Overall though, I had a good time figuring out Rust, and learned about both pros and cons of the language."]},{title:'Chanl <a href="https://github.com/kutoru/chanl-frontend">frontend</a> and <a href="https://github.com/kutoru/chanl-backend">backend</a>',start_date:"2023.07.02",end_date:"not finished yet",sections:[`This project was supposed to be a <a href="https://en.wikipedia.org/wiki/Discord">Discord</a> clone without the voice chat features. The project isn't fully done yet, but most websocket and auth parts are already in place.`,"I mainly wanted to learn more about: how websockets work, how frontend interacts with backend, how user auth works.","One of the hardest parts is to actually keep all the different parts of the project in mind. Other hard things were auth token management and just general CSS styling.","Although the project isn't finished yet, I already learned quite a few things. For an example, I learned how to manage cookies with Go. Other things I had to figure out were how to manage websocket sessions and how to identify users that connect to the server through websockets."]},{title:'<a href="https://github.com/kutoru/data-structures-and-algorithms">Data structures and algorithms</a>',start_date:"2023.07.27",end_date:"2023.08.05",sections:['In this project I followed <a href="https://frontendmasters.com/courses/algorithms">this</a> course. The course is taught in TypeScript, but I decided to challenge myself and follow it in C. I also went a little bit beyond the course and implemented some things that were not shown there (Tries and Maps for example).',"Other than the data structures and algorithms, I also wanted to get experience with C.","While the data structures and algorithms themselves were pretty straightforward, the biggest difficulty was actually researching and trying to implement comprehensible gererics in C.","Before the course I already knew a thing or two about data structures, but this course helped me fill knowledge gaps that I had about the topic. Also, while I had some experience with languages that don't have garbage collection, I feel like coding in C helped me understand memory management even more. And I also learned how coding in a more minimalistic kind of language feels."]}]},A={title:"Мои личные проекты",desc:"Это что-то вроде отчёта о некоторых моих личных проектах. Проекты перечислены в хронологическом порядке, от старых к новым. Каждый проект есть на Гитхабе, и для каждого проекта написаны небольшое описание, ключевые цели связанные с проектом, какие трудности мне пришлось преодолеть, и чему я в итоге научился.",section_names:["О проекте:","Цели:","Возникшие сложности:","Итог:"],projects:[{title:'<a href="https://github.com/kutoru/sudoku-gui">Sudoku GUI</a>',start_date:"2023.04.08",end_date:"2023.04.24",sections:['Этот проект представлял собой игру Судоку с минимальным графическим интерфейсом, написанную с помощью <a href="https://learn.microsoft.com/ru-ru/dotnet/desktop/winforms/overview">Windows Forms</a>. Проект также позволял игрокам создавать аккаунты, входить в них, создавать, проходить и удалять уровни разных размеров и сложностей.',"Я хотел сосредоточиться на том как создавать приложения с графическим интерфейсом, взаимодействовать с базами данных с помощью C++, и управлять учётными данными пользователей.","Самой большой проблемой была библиотека шифрования, мне было трудно найти и импортировать её. Мне также было трудно работать с кодом в целом. Из-за отсутствия опыта работы с фреймворками я не мог понять как лучше всего разделить мой код и как мне стоило это сделать.","В конце концов я узнал всё что изначально хотел, а также узнал как разделение кода и общее управление кодом могут быть полезными и удобными."]},{title:'<a href="https://github.com/kutoru/par">Par</a>',start_date:"2023.05.10",end_date:"2023.05.17",sections:["Приложение для просмотра изображений, которое получает изображения из API определённого сайта.","В основном я хотел получить опыт с Rust и попробовать другие способы создания приложений с графическим интерфейсом. До этого проекта я почти не пользовался Гитхабом, поэтому ещё одной целью было ознакомиться с этой платформой и её контролем версий.","Самой большой трудностью было отсутствие готовых библиотек (или как их называют, крейтов) в Rust. Переходя из Python, я привык к тому что почти для всего есть полноценные модули. Но с Rust мне пришлось использовать устаревшую GUI библиотеку, и ещё я не мог найти подходящий API-враппер для сайта, с которого получал изображения. И, очевидно, в начале было сложно понять некоторые особенности Rust, к примеру borrow checker и lifetimes.","В целом мне было интересно проводить время изучая Rust, и в итоге я узнал как о плюсах, так и о минусах языка."]},{title:'Chanl <a href="https://github.com/kutoru/chanl-frontend">frontend</a> и <a href="https://github.com/kutoru/chanl-backend">backend</a>',start_date:"2023.07.02",end_date:"ещё не закончен",sections:['Этот проект планировался как клон <a href="https://ru.wikipedia.org/wiki/Discord">Discord</a> без функций голосового чата. Проект ещё не полностью завершён, но большинство вебсокет частей и auth частей уже готовы.',"В основном я хотел узнать больше о том, как работают вебсокеты, как интерфейс взаимодействует с серверной частью, и как работает аутентификация пользователя.","Помнить о всех частях проекта было довольно тяжело. Другими сложными вещами были управление токенами авторизации и в целом работа с CSS.","Хотя проект ещё не завершён, я уже кое-чему научился. Например, я научился управлять файлами cookie с помощью Go. Еще одна вещь, которую мне пришлось выяснить, это как управлять сеансами вебсокетов и как идентифицировать пользователей которые подключаются к серверу через вебсокеты."]},{title:'<a href="https://github.com/kutoru/data-structures-and-algorithms">Data structures and algorithms</a>',start_date:"2023.07.27",end_date:"2023.08.05",sections:['В этом проекте я в следовал <a href="https://frontendmasters.com/courses/algorithms">этому</a> курсу. Курс преподается на TypeScript, но я решил испытать себя и писать его на C. Я также немного вышел за рамки курса и реализовал некоторые вещи, которые не были в нём показаны (Tries и Maps например).',"Помимо структур данных и алгоритмов, я ещё хотел опробовать C.","Со структурами данных и алгоритмами я разобрался без особых проблем. Самой большой трудностью было исследование и попытка реализовать простую и понятную систему gererics в C.","До курса я уже знал пару вещей о структурах данных, но этот курс помог мне заполнить пробелы в знаниях по этой теме. Кроме того, хоть у меня и был некоторый опыт работы с языками у которых нет GC, программирование на C помогло мне еще лучше понять управление памятью. И также я испытал на себе, каково это, программировать на более минималистичном языке."]}]},w={en:j,ru:A},B={class:"text-block center"},G={class:"header-text"},P={class:"text-block"},S=["innerHTML"],H={class:"sub-text"},R=["innerHTML"],M=["innerHTML"],D=C({__name:"ProjectView",setup(L){const b=localStorage.getItem("lang");let n;b==="ru"?n=w.ru:n=w.en;const c=p([]),r=p(-1);function y(t){const e=t.getElementsByClassName("separator");for(let o=0;o<e.length;o++)e[o].setAttribute("style","background-color: rgba(50, 25, 25, 0.33);");const a=getComputedStyle(document.body).getPropertyValue("--shadow-h");t.setAttribute("style",`box-shadow: ${a};`)}function k(t){const e=t.getElementsByClassName("separator");for(let a=0;a<e.length;a++)e[a].removeAttribute("style");t.removeAttribute("style")}function _(t,e){for(let a=0;a<c.value.length;a++){const o=c.value[a],h=o.getBoundingClientRect();if(t>=h.top-e&&t<=h.bottom+e){y(o),r.value=a;break}}}function I(t,e){const a=c.value[r.value],o=a.getBoundingClientRect();(t<o.top-e||t>o.bottom+e)&&(k(a),r.value=-1)}function v(){const t=window.innerHeight/2,e=parseInt(getComputedStyle(document.body).getPropertyValue("--spacer"))/2;r.value>-1&&I(t,e),r.value<0&&_(t,e)}return window.addEventListener("scroll",v,!1),x(()=>{const t=document.getElementsByClassName("text-block");for(let e=2;e<t.length;e++)c.value.push(t[e])}),(t,e)=>(l(),i(g,null,[s("div",B,[s("span",G,d(u(n).title),1)]),s("div",P,[s("span",null,d(u(n).desc),1)]),(l(!0),i(g,null,f(u(n).projects,(a,o)=>(l(),i("div",{class:"text-block",key:o},[s("span",{class:"title-text",innerHTML:a.title},null,8,S),s("span",H,d(a.start_date)+" - "+d(a.end_date),1),(l(!0),i(g,null,f(a.sections,(h,m)=>(l(),i("div",{key:m},[s("div",{class:"separator",innerHTML:u(n).section_names[m]},null,8,R),s("span",{innerHTML:h},null,8,M)]))),128))]))),128))],64))}});const F=T(D,[["__scopeId","data-v-418dafeb"]]);export{F as default};
